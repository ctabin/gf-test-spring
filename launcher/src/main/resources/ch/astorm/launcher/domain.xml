<?xml version="1.0" encoding="UTF-8"?>
<domain log-root="${EDMS_ROOT}/payara-logs" application-root="${com.sun.aas.instanceRoot}/applications" version="10.0">
  <system-property name="ch.astorm.root" value="root" />
  <hazelcast-runtime-configuration start-port="5900" das-port="4900" auto-increment-port="true"></hazelcast-runtime-configuration>
  <security-configurations>
    <authentication-service default="true" name="adminAuth" use-password-credential="true">
      <security-provider name="spcrealm" type="LoginModule" provider-name="adminSpc">
        <login-module-config name="adminSpecialLM" control-flag="sufficient" module-class="com.sun.enterprise.admin.util.AdminLoginModule">
          <property name="config" value="server-config"></property>
          <property name="auth-realm" value="admin-realm"></property>
        </login-module-config>
      </security-provider>
      <security-provider name="filerealm" type="LoginModule" provider-name="adminFile">
        <login-module-config name="adminFileLM" control-flag="sufficient" module-class="com.sun.enterprise.security.auth.login.FileLoginModule">
          <property name="config" value="server-config"></property>
          <property name="auth-realm" value="admin-realm"></property>
        </login-module-config>
      </security-provider>
    </authentication-service>
    <authorization-service default="true" name="authorizationService">
      <security-provider name="simpleAuthorization" type="Simple" provider-name="simpleAuthorizationProvider">
        <authorization-provider-config support-policy-deploy="false" name="simpleAuthorizationProviderConfig"></authorization-provider-config>
      </security-provider>
    </authorization-service>
  </security-configurations>
  <system-applications />
  <resources>
    <jdbc-resource pool-name="__TimerPool" jndi-name="jdbc/__TimerPool" object-type="system-all" />
    <jdbc-resource pool-name="H2Pool" jndi-name="jdbc/__default" object-type="system-all" />
    <jdbc-connection-pool name="__TimerPool" datasource-classname="org.h2.jdbcx.JdbcDataSource" res-type="javax.sql.XADataSource">
      <property name="URL" value="jdbc:h2:${com.sun.aas.instanceRoot}/lib/databases/ejbtimer;AUTO_SERVER=TRUE" />
    </jdbc-connection-pool>
    <jdbc-connection-pool is-isolation-level-guaranteed="false" name="H2Pool" datasource-classname="org.h2.jdbcx.JdbcDataSource" res-type="javax.sql.DataSource">
      <property name="URL" value="jdbc:h2:${com.sun.aas.instanceRoot}/lib/databases/embedded_default;AUTO_SERVER=TRUE" />
    </jdbc-connection-pool>
    <!-- #################### -->
    <jdbc-connection-pool pool-resize-quantity="2" connection-leak-reclaim="false" match-connections="false" connection-creation-retry-attempts="0" connection-validation-method="auto-commit" associate-with-thread="false" res-type="javax.sql.DataSource" max-wait-time-in-millis="60000" fail-all-connections="false" allow-non-component-callers="false" lazy-connection-association="false" max-connection-usage-count="0" datasource-classname="org.h2.jdbcx.JdbcDataSource" is-connection-validation-required="true" wrap-jdbc-objects="false" is-isolation-level-guaranteed="true" validate-atmost-once-period-in-seconds="0" lazy-connection-enlistment="false" connection-creation-retry-interval-in-seconds="10" max-pool-size="32" connection-leak-timeout-in-seconds="0" non-transactional-connections="false" steady-pool-size="8" idle-timeout-in-seconds="300" name="simple_h2_pool" statement-timeout-in-seconds="-1">
      <property name="User" value="user" />
      <property name="driverClass" value="org.h2.Driver" />
      <property name="URL" value="jdbc:h2:${DATABASE_FILE};MODE=MySQL;IGNORECASE=TRUE;WRITE_DELAY=0;AUTO_SERVER=TRUE" />
      <property name="Password" value="changeit" />
    </jdbc-connection-pool>
    <jdbc-resource pool-name="simple_h2_pool" jndi-name="jdbc/db" />
    <!-- #################### -->
  </resources>
  <servers>
    <server name="server" config-ref="server-config">
      <resource-ref ref="jdbc/__TimerPool" />
      <resource-ref ref="jdbc/__default" />
      <resource-ref ref="jdbc/__derby" />
      <resource-ref ref="jdbc/db" />
    </server>
  </servers>
  <nodes>
    <node name="localhost-production" type="CONFIG" node-host="localhost" install-dir="${com.sun.aas.productRoot}" />
  </nodes>
  <configs>
    <config name="server-config">
      <system-property name="JMS_PROVIDER_PORT" value="9956" description="Port Number that JMS Service will listen for remote clients connection." />
      
      <phone-home-runtime-configuration enabled="false"/>
      <payara-executor-service-configuration />
      <http-service>
        <access-log />
        <virtual-server id="server" network-listeners="http-listener-1,http-listener-2" />
        <virtual-server id="__asadmin" network-listeners="admin-listener" />
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1" />
        <iiop-listener address="0.0.0.0" port="9964" id="orb-listener-1" lazy-init="true" />
        <ssl ssl3-enabled="false" />
        <iiop-listener security-enabled="true" address="0.0.0.0" port="9965" id="SSL">
          <ssl ssl3-enabled="false" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" />
        </iiop-listener>
        <iiop-listener security-enabled="true" address="0.0.0.0" port="9966" id="SSL_MUTUALAUTH">
          <ssl ssl3-enabled="false" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true" />
        </iiop-listener>
      </iiop-service>
      <admin-service auth-realm-name="admin-realm" type="das-and-server" system-jmx-connector-name="system">
        <jmx-connector auth-realm-name="admin-realm" security-enabled="false" address="0.0.0.0" port="9957" name="system" />
        <property value="/admin" name="adminConsoleContextRoot" />
        <property value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war" name="adminConsoleDownloadLocation" />
        <property value="${com.sun.aas.installRoot}/.." name="ipsRoot" />
        <das-config dynamic-reload-enabled="false" autodeploy-enabled="false" deploy-xml-validation="none" />
      </admin-service>
      <hazelcast-config-specific-configuration enabled="false" />
      <connector-service shutdown-timeout-in-seconds="30" />
      <transaction-service tx-log-dir="payara-logs" timeout-in-seconds="300">
        <property name="xaresource-txn-timeout" value="300" />
        <property name="purge-cancelled-transactions-after" value="500" />
      </transaction-service>
      <ejb-container max-pool-size="128">
        <ejb-timer-service />
      </ejb-container>
      <asadmin-recorder-configuration enabled="false" />
      <request-tracing-service-configuration enabled="false" />
      <notification-service-configuration enabled="false" />
      <batch-runtime-configuration data-source-lookup-name="jdbc/__default" />
      <monitoring-service-configuration enabled="false" />
      <microprofile-metrics-configuration enabled="false" />
      <diagnostic-service enabled="false" />
      <security-service activate-default-principal-to-role-mapping="true" jacc="simple">
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
          <property value="${com.sun.aas.instanceRoot}/config/admin-keyfile" name="file" />
          <property value="fileRealm" name="jaas-context" />
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
          <property value="${com.sun.aas.instanceRoot}/config/keyfile" name="file" />
          <property value="fileRealm" name="jaas-context" />
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate" />
        <jacc-provider policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" />
        <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
          <property value="false" name="auditOn" />
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-type="client">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property value="s1as" name="encryption.key.alias" />
            <property value="s1as" name="signature.key.alias" />
            <property value="false" name="dynamic.username.password" />
            <property value="false" name="debug" />
          </provider-config>
          <provider-config provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-type="client">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property value="s1as" name="encryption.key.alias" />
            <property value="s1as" name="signature.key.alias" />
            <property value="false" name="dynamic.username.password" />
            <property value="false" name="debug" />
            <property value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" name="security.config" />
          </provider-config>
          <provider-config provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-type="server">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property value="s1as" name="encryption.key.alias" />
            <property value="s1as" name="signature.key.alias" />
            <property value="false" name="debug" />
          </provider-config>
          <provider-config provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-type="server">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property value="s1as" name="encryption.key.alias" />
            <property value="s1as" name="signature.key.alias" />
            <property value="false" name="debug" />
            <property value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" name="security.config" />
          </provider-config>
        </message-security-config>
        <!--message-security-config auth-layer="HttpServlet">
          <provider-config provider-type="server" provider-id="GFConsoleAuthModule" class-name="org.glassfish.admingui.common.security.AdminConsoleAuthModule">
            <request-policy auth-source="sender" />
            <response-policy />
            <property name="loginPage" value="/login.jsf" />
            <property name="loginErrorPage" value="/loginError.jsf" />
          </provider-config>
        </message-security-config-->
        <property value="SHA-256" name="default-digest-algorithm" />
      </security-service>
      <java-config classpath-suffix="" system-classpath="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9009">
        <jvm-options>[9|]--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED</jvm-options>
        <!-- Hazelcast internal package access requirement to get the best performance results. -->
        <jvm-options>[9|]--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.lang=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.net=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.nio=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/java.util=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.management/sun.management=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jrt=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.base/sun.net.www.protocol.jar=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.naming/javax.naming.spi=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED</jvm-options>
        <jvm-options>[9|]--add-opens=java.logging/java.util.logging=ALL-UNNAMED</jvm-options>
        <jvm-options>-Xmx2g</jvm-options>
        <jvm-options>-Xms2g</jvm-options>
        <jvm-options>-XX:+UseG1GC</jvm-options>
        <jvm-options>-XX:+UseStringDeduplication</jvm-options>
        <jvm-options>-XX:MaxGCPauseMillis=500</jvm-options>
        <jvm-options>-XX:MetaspaceSize=256m</jvm-options>
        <jvm-options>-XX:MaxMetaspaceSize=2g</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-Djava.awt.headless=true</jvm-options>
        <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
        <jvm-options>-Djavax.xml.accessExternalSchema=all</jvm-options>
        <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/${KEYSTORE}</jvm-options>
        <!-- the embedded cacerts.jks contains only two self-signed certificates, hence it is needed to point
             the trusted CA certs to the default one provided by the JDK -->
        <!--jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options-->
        <jvm-options>-Djavax.net.ssl.trustStore=${java.home}/lib/security/cacerts</jvm-options>
        <jvm-options>-Djdbc.drivers=org.h2.Driver</jvm-options>
        <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-Djdk.tls.rejectClientInitiatedRenegotiation=true</jvm-options>
        <jvm-options>-Dorg.jboss.weld.serialization.beanIdentifierIndexOptimization=false</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.DEFAULT_MEMORY_MANAGER=org.glassfish.grizzly.memory.HeapMemoryManager</jvm-options>
        <jvm-options>-Dorg.glassfish.grizzly.nio.DefaultSelectorHandler.force-selector-spin-detection=true</jvm-options>
        <!-- Grizzly NPN Jar version -->
        <jvm-options>[1.8.0|1.8.0u120]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.6.jar</jvm-options>
        <jvm-options>[1.8.0u121|1.8.0u160]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.7.jar</jvm-options>
        <jvm-options>[1.8.0u161|1.8.0u190]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.jar</jvm-options>
        <jvm-options>[1.8.0u191|1.8.0u500]-Xbootclasspath/p:${com.sun.aas.installRoot}/lib/grizzly-npn-bootstrap-1.8.1.jar</jvm-options>
        <jvm-options>[9|]-Xbootclasspath/a:${com.sun.aas.installRoot}/lib/grizzly-npn-api.jar</jvm-options>
        <jvm-options>[|8]-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>[|8]-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
        <jvm-options>[Azul-1.8.0u222|1.8.0u500]-XX:+UseOpenJSSE</jvm-options>
      </java-config>
      <availability-service>
        <web-container-availability />
        <ejb-container-availability sfsb-store-pool-name="jdbc/hastore" />
        <jms-availability />
      </availability-service>
      <network-config>
        <protocols>
          <protocol name="http-listener-1">
            <http default-virtual-server="server" max-connections="250" xpowered-by="false">
              <file-cache enabled="true" />
            </http>
            <ssl ssl3-enabled="false" />
          </protocol>
          <protocol security-enabled="true" name="http-listener-2">
            <http default-virtual-server="server" max-connections="250" xpowered-by="false">
              <file-cache enabled="true" />
            </http>
            <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" ssl3-enabled="false" ssl2-enabled="false" tls-enabled="false" tls11-enabled="false" cert-nickname="s1as" />
          </protocol>
          <!-- #################### -->
          <!--protocol name="admin-listener">
            <http default-virtual-server="__asadmin" max-connections="250" encoded-slash-enabled="true" xpowered-by="false">
              <file-cache enabled="false" />
            </http>
          </protocol-->
          <!-- #################### -->
        </protocols>
        <network-listeners>
          <network-listener port="8080" protocol="http-listener-1" transport="tcp" name="http-listener-1" thread-pool="http-thread-pool" />
          <network-listener port="8181" protocol="http-listener-2" transport="tcp" name="http-listener-2" thread-pool="http-thread-pool" />
          <!--network-listener port="4848" protocol="admin-listener" transport="tcp" name="admin-listener" thread-pool="admin-thread-pool" /-->
        </network-listeners>
        <transports>
          <transport name="tcp" />
        </transports>
      </network-config>
      <thread-pools>
        <thread-pool max-thread-pool-size="50" name="http-thread-pool" />
        <thread-pool max-thread-pool-size="250" name="thread-pool-1" />
        <!--thread-pool name="admin-thread-pool" max-thread-pool-size="15" min-thread-pool-size="1" max-queue-size="256" /-->
      </thread-pools>
      <!-- #################### -->
      <!-- This property must be commented to avoid classloading issues -->
      <!--system-property name="fish.payara.classloading.delegate" value="false" /-->
      <!-- #################### -->
      <system-property name="jersey.config.client.readTimeout" value="300000" />
      <system-property name="jersey.config.client.connectTimeout" value="300000" />
      <system-property name="org.jboss.weld.clustering.rollingUpgradesIdDelimiter" value=".." />
      <system-property name="org.jboss.weld.probe.allowRemoteAddress" value="127.0.0.1|::1|::1%.+|0:0:0:0:0:0:0:1|0:0:0:0:0:0:0:1%.+" />
    </config>
  </configs>
  <property name="administrative.domain.name" value="production" />
  <secure-admin special-admin-indicator="3cf5951d-fd4e-44a6-b80d-15a79ab4d256">
    <secure-admin-principal dn="CN=localhost,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK" />
    <secure-admin-principal dn="CN=localhost-instance,OU=Payara,O=Payara Foundation,L=Great Malvern,ST=Worcestershire,C=UK" />
  </secure-admin>
</domain>
